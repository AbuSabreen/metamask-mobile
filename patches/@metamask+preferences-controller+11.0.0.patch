diff --git a/node_modules/@metamask/preferences-controller/dist/chunk-FSWGV6H6.js b/node_modules/@metamask/preferences-controller/dist/chunk-FSWGV6H6.js
index 30e985c..5acb44a 100644
--- a/node_modules/@metamask/preferences-controller/dist/chunk-FSWGV6H6.js
+++ b/node_modules/@metamask/preferences-controller/dist/chunk-FSWGV6H6.js
@@ -17,13 +17,15 @@ var metadata = {
   isIpfsGatewayEnabled: { persist: true, anonymous: true },
   isMultiAccountBalancesEnabled: { persist: true, anonymous: true },
   lostIdentities: { persist: true, anonymous: false },
-  openSeaEnabled: { persist: true, anonymous: true },
+  displayNftMedia: { persist: true, anonymous: true },
+  useSafeChainsListValidation: { persist: true, anonymous: true },
   securityAlertsEnabled: { persist: true, anonymous: true },
   selectedAddress: { persist: true, anonymous: false },
   showTestNetworks: { persist: true, anonymous: true },
   showIncomingTransactions: { persist: true, anonymous: true },
   useNftDetection: { persist: true, anonymous: true },
-  useTokenDetection: { persist: true, anonymous: true }
+  useTokenDetection: { persist: true, anonymous: true },
+  smartTransactionsOptInStatus: { persist: true, anonymous: true }
 };
 var name = "PreferencesController";
 function getDefaultPreferencesState() {
@@ -37,7 +39,7 @@ function getDefaultPreferencesState() {
     isIpfsGatewayEnabled: true,
     isMultiAccountBalancesEnabled: true,
     lostIdentities: {},
-    openSeaEnabled: false,
+    displayNftMedia: false,
     securityAlertsEnabled: false,
     selectedAddress: "",
     showIncomingTransactions: {
@@ -64,7 +66,9 @@ function getDefaultPreferencesState() {
     },
     showTestNetworks: false,
     useNftDetection: false,
-    useTokenDetection: true
+    useTokenDetection: true,
+    useSafeChainsListValidation: true,
+    smartTransactionsOptInStatus: false,
   };
 }
 var _syncIdentities, syncIdentities_fn;
@@ -213,9 +217,9 @@ var PreferencesController = class extends _basecontroller.BaseController {
    * @param useNftDetection - Boolean indicating user preference on NFT detection.
    */
   setUseNftDetection(useNftDetection) {
-    if (useNftDetection && !this.state.openSeaEnabled) {
+    if (useNftDetection && !this.state.displayNftMedia) {
       throw new Error(
-        "useNftDetection cannot be enabled if openSeaEnabled is false"
+        "useNftDetection cannot be enabled if displayNftMedia is false"
       );
     }
     this.update((state) => {
@@ -223,18 +227,33 @@ var PreferencesController = class extends _basecontroller.BaseController {
     });
   }
   /**
-   * Toggle the opensea enabled setting.
+   * Toggle the display nft media enabled setting.
    *
-   * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+   * @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
    */
-  setOpenSeaEnabled(openSeaEnabled) {
+  setDisplayNftMedia(displayNftMedia) {
     this.update((state) => {
-      state.openSeaEnabled = openSeaEnabled;
-      if (!openSeaEnabled) {
+      state.displayNftMedia = displayNftMedia;
+      if (!displayNftMedia) {
         state.useNftDetection = false;
       }
     });
   }
+  
+  /**
+   * Toggle the use safe chains list validation.
+   *
+   * @param useSafeChainsListValidation - Boolean indicating user preference on using chainid.network third part to check safe networks.
+   */
+  setUseSafeChainsListValidation(useSafeChainsListValidation) {
+      this.update((state) => {
+          state.useSafeChainsListValidation = useSafeChainsListValidation;
+          if (!useSafeChainsListValidation) {
+              state.useSafeChainsListValidation = false;
+          }
+      })    
+  }
+
   /**
    * Toggle the security alert enabled setting.
    *
@@ -245,6 +264,18 @@ var PreferencesController = class extends _basecontroller.BaseController {
       state.securityAlertsEnabled = securityAlertsEnabled;
     });
   }
+
+  /**
+   * A setter for the user to opt into smart transactions
+   *
+   * @param smartTransactionsOptInStatus - true to opt into smart transactions
+   */
+  setSmartTransactionsOptInStatus(smartTransactionsOptInStatus) {
+      this.update((state) => {
+          state.smartTransactionsOptInStatus = smartTransactionsOptInStatus;
+      });
+  }
+
   /**
    * A setter for the user preferences to enable/disable rpc methods.
    *
diff --git a/node_modules/@metamask/preferences-controller/dist/types/PreferencesController.d.ts b/node_modules/@metamask/preferences-controller/dist/types/PreferencesController.d.ts
index 7e3ba15..a7cf38e 100644
--- a/node_modules/@metamask/preferences-controller/dist/types/PreferencesController.d.ts
+++ b/node_modules/@metamask/preferences-controller/dist/types/PreferencesController.d.ts
@@ -69,9 +69,10 @@ export type PreferencesState = {
         [address: string]: Identity;
     };
     /**
-     * Controls whether the OpenSea API is used
+     * Controls whether the web2 third parties are used
      */
-    openSeaEnabled: boolean;
+    displayNftMedia: boolean;
+    useSafeChainsListValidation: boolean,
     /**
      * Controls whether "security alerts" are enabled
      */
@@ -98,6 +99,10 @@ export type PreferencesState = {
      * Controls whether token detection is enabled
      */
     useTokenDetection: boolean;
+    /**
+     * Controls whether smart transactions are opted into
+     */
+    smartTransactionsOptInStatus: boolean;
 };
 declare const name = "PreferencesController";
 export type PreferencesControllerGetStateAction = ControllerGetStateAction<typeof name, PreferencesState>;
@@ -217,11 +222,16 @@ export declare class PreferencesController extends BaseController<typeof name, P
      */
     setUseNftDetection(useNftDetection: boolean): void;
     /**
-     * Toggle the opensea enabled setting.
+     * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     * @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
      */
-    setOpenSeaEnabled(openSeaEnabled: boolean): void;
+    setDisplayNftMedia(displayNftMedia: boolean): void;
+    /**
+    * Toggle the use safe chains list validation.
+    * @param useSafeChainsListValidation - Boolean indicating user preference on using chainid.network third part to check safe networks.
+    */
+    setUseSafeChainsListValidation(useSafeChainsListValidation: boolean): void;
     /**
      * Toggle the security alert enabled setting.
      *
@@ -260,6 +270,12 @@ export declare class PreferencesController extends BaseController<typeof name, P
      * @param isIncomingTransactionNetworkEnable - true to enable incoming transactions
      */
     setEnableNetworkIncomingTransactions(chainId: EtherscanSupportedHexChainId, isIncomingTransactionNetworkEnable: boolean): void;
+    /**
+     * A setter for the user to opt into smart transactions
+     *
+     * @param smartTransactionsOptInStatus - true to opt into smart transactions
+     */
+    setSmartTransactionsOptInStatus(smartTransactionsOptInStatus: boolean): void;
 }
 export default PreferencesController;
 //# sourceMappingURL=PreferencesController.d.ts.map
\ No newline at end of file
